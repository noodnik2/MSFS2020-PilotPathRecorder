{
  "Lens": [
    {
      "Name": "",
      "Template": "<?xml version='1.0' encoding='UTF-8'?>\r\n<kml xmlns='http://www.opengis.net/kml/2.2'>\r\n  <NetworkLink>\r\n    <name>MSFS2020-PilotPathRecorder Duckseye LiveCam ({alias}) - Link</name>\r\n    <flyToView>1</flyToView>\r\n    <Link>\r\n      <href>{url}/camera</href>\r\n      <refreshMode>onChange</refreshMode>\r\n      <viewRefreshMode>never</viewRefreshMode>\r\n    </Link>\r\n  </NetworkLink>\r\n</kml>"
    },
    {
      "Name": "camera",
      "Template": "<?xml version='1.0' encoding='UTF-8'?>\r\n<kml\r\n    xmlns='http://www.opengis.net/kml/2.2'\r\n    xmlns:gx=\"http://www.google.com/kml/ext/2.2\"\r\n>\r\n  <Document>\r\n\r\n    <name>Duckseye Camera</name>\r\n\r\n    <Placemark>\r\n\r\n      <description>MSFS2020-PilotPathRecorder Duckseye LiveCam ({alias})</description>\r\n\r\n      <Style id=\"nullIcon\">\r\n        <IconStyle>\r\n          <Icon />\r\n        </IconStyle>\r\n      </Style>\r\n\r\n      <styleUrl>#nullIcon</styleUrl>\r\n      <Point>\r\n        <altitudeMode>absolute</altitudeMode>\r\n      </Point>\r\n\r\n      <gx:MultiTrack id=\"pp\">\r\n        <altitudeMode>absolute</altitudeMode>\r\n        <gx:interpolate>1</gx:interpolate>\r\n        <gx:Track id=\"pp_t1\">\r\n        </gx:Track>\r\n      </gx:MultiTrack>\r\n\r\n    </Placemark>\r\n\r\n    <NetworkLink>\r\n      <name>Birdseye Camera Link</name>\r\n      <flyToView>1</flyToView>\r\n      <Link>\r\n        <href>http://localhost:8000/kmlcam/duckseye/update</href>\r\n        <httpQuery>flightId={flightId}&amp;seq={seq}</httpQuery>\r\n        <refreshMode>onInterval</refreshMode>\r\n        <refreshInterval>{refreshSeconds}</refreshInterval>\r\n      </Link>\r\n    </NetworkLink>\r\n\r\n  </Document>\r\n</kml>"
    },
    {
      "Name": "update",
      "Template": "@{\r\n\r\n    @using System;\r\n    var query = Model.query;\r\n\r\n    if (!query.ContainsKey(\"flightId\") || !query.ContainsKey(\"seq\")) {\r\n     Console.WriteLine(\"error: required parameter(s) not present\");\r\n     return;\r\n    }\r\n\r\n    var hackLast = new Func<string, string>(\r\n        s => {\r\n          var k = s.Split(',');\r\n          return k[k.Length - 1];\r\n        }\r\n    );\r\n\r\n    var flightIdLast = hackLast.Invoke(query[\"flightId\"]);\r\n    var seqLast = hackLast.Invoke(query[\"seq\"]);\r\n\r\n    //Console.WriteLine($\"flightIdLast({flightIdLast})\");\r\n    //Console.WriteLine($\"seqLast({seqLast})\");\r\n\r\n    var lastSeq = long.Parse(seqLast);\r\n    var flightId = int.Parse(flightIdLast);\r\n\r\n    var updates = Model.getMultitrackUpdates(flightId, lastSeq);\r\n\r\n    var nextSeq = (\r\n        updates.Length == 0\r\n      ? lastSeq\r\n      : updates[updates.Length - 1].seq\r\n    );\r\n\r\n    //Console.WriteLine($\"nextSeq({nextSeq})\");\r\n\r\n}\r\n<?xml version='1.0' encoding='UTF-8'?>\r\n<kml\r\n  xmlns='http://www.opengis.net/kml/2.2'\r\n  xmlns:gx='http://www.google.com/kml/ext/2.2'\r\n>\r\n  <NetworkLinkControl>\r\n    <linkName>MSFS2020-PilotPathRecorder Duckseye LiveCam - Update</linkName>\r\n    <cookie>seq=@nextSeq&amp;flightId=@flightId</cookie>\r\n    <Update>\r\n      <targetHref>http://localhost:8000/kmlcam/duckseye/camera</targetHref>\r\n      <Create>\r\n        <gx:MultiTrack targetId='pp'>\r\n          <altitudeMode>absolute</altitudeMode>\r\n          <gx:Track>\r\n            <altitudeMode>absolute</altitudeMode>\r\n            <Model>\r\n              <altitudeMode>absolute</altitudeMode>\r\n              <Orientation>\r\n                <heading>90</heading>\r\n              </Orientation>\r\n              <Scale><x>150</x><y>150</y><z>150</z></Scale>\r\n              <Link>\r\n                <href>http://localhost:8000/liveCam/models/duck.dae</href>\r\n              </Link>\r\n            </Model>\r\n            @foreach (var update in updates) {\r\n            <gx:coord>\r\n              @update.longitude\r\n              @update.latitude\r\n              @update.altitude\r\n            </gx:coord>\r\n            }\r\n            @foreach (var update in updates) {\r\n            <gx:angles>\r\n              @update.heading\r\n              @update.tilt\r\n              @update.roll\r\n            </gx:angles>\r\n            }\r\n          </gx:Track>\r\n        </gx:MultiTrack>\r\n      </Create>\r\n    </Update>\r\n  </NetworkLinkControl>\r\n</kml>"
    }
  ]
}