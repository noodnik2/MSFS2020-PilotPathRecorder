@{

    @using System;
    var query = Model.query;

    if (!query.ContainsKey("flightId") || !query.ContainsKey("seq")) {
     Console.WriteLine("oops - required parameter(s) not present");
     return;
    }

    var hackLast = new Func<string, string>(
        s => {
          var k = s.Split(',');
          return k[k.Length - 1];
        }
    );

    var flightIdLast = hackLast.Invoke(query["flightId"]);
    var seqLast = hackLast.Invoke(query["seq"]);

    Console.WriteLine($"flightIdLast({flightIdLast})");
    Console.WriteLine($"seqLast({seqLast})");

    var lastSeq = long.Parse(seqLast);
    var flightId = int.Parse(flightIdLast);

    var updates = Model.getMultitrackUpdates(
    flightId,
    lastSeq
    );

    var nextSeq = (
    updates.Length == 0
      ? lastSeq
      : updates[updates.Length - 1].seq
    );

    Console.WriteLine($"nextSeq({nextSeq})");

}
<?xml version='1.0' encoding='UTF-8'?>
<kml
  xmlns='http://www.opengis.net/kml/2.2'
  xmlns:gx='http://www.google.com/kml/ext/2.2'
>
  <NetworkLinkControl>
    <linkName>Third Multicam Example: Subsequent Updates Camera</linkName>
    <cookie>seq=@nextSeq&amp;flightId=@flightId</cookie>
    <Update>
      <targetHref>http://localhost:8000/mc3.init</targetHref>
      <Create>
        <gx:MultiTrack targetId='pp'>
           <altitudeMode>absolute</altitudeMode>

          <gx:Track>
            <altitudeMode>absolute</altitudeMode>
            
            <Model>
              <altitudeMode>absolute</altitudeMode>
              <Orientation>
                <heading>90</heading>
              </Orientation>
              <Scale><x>16</x><y>16</y><z>16</z></Scale>
              <Link>
                <href>http://localhost:8000/models/model.dae</href>
              </Link>
            </Model>

            @foreach (var update in updates) {
            <gx:coord>
              @update.longitude
              @update.latitude
              @update.altitude
            </gx:coord>
            }
            @foreach (var update in updates) {
            <gx:angles>
              @update.heading
              @update.tilt
              @update.roll
            </gx:angles>
            }
          </gx:Track>
        </gx:MultiTrack>
      </Create>
    </Update>
  </NetworkLinkControl>
</kml>