on:
  push:
    tags:
      - 'v*.*.*'
jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set env
#        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
#      - name: Test
#        run: |
#          echo $RELEASE_VERSION
#          echo ${{ env.RELEASE_VERSION }}
#
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Get Current Tag
        run: |
          echo "BUILD_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "BUILD_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "RELEASE_TIME=$(date +%y%m%d%H%M)" >> $GITHUB_ENV
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: MSFS2020-PilotPathRecorder-n2
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BUILD_TAG }}
          release_name: Release ${{ env.BUILD_TAG }}-${{ env.BUILD_BRANCH }}-${{ env.RELEASE_TIME }}
      - name: Build Release Deliverable
        uses: thedoctor0/zip-release@master
        with:
          filename: PilotPathRecorder-n2.zip
      - name: Upload Release Deliverable
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: PilotPathRecorder-n2.zip
          asset_name: PilotPathRecorder-n2-${{ env.BUILD_TAG }}-${{ env.BUILD_BRANCH }}-${{ env.RELEASE_TIME }}.zip
          asset_content_type: application/zip
