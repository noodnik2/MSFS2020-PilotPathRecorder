name: Build

on:
  push:
    branches:
      - 210227-cicr-reset-test
    tags:
      - '*'

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    steps:
    - name: Checkout Source
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
      
    - name: Setup Package Manager
      uses: NuGet/setup-nuget@v1
        
    - name: Resolve Dependencies
      run: nuget restore FS2020PlanePath.sln

    - name: Build Solution
      run: msbuild FS2020PlanePath.sln /p:Configuration=Release

    - name: Add Build Manifest
      id: build-manifest
      run: |
        $env:BUILD_TAG='${{ github.ref }}'.split('/')[2]
        echo "$env:BUILD_TAG" > FS2020PlanePath/bin/Release/build_tag.txt
        echo "::set-output name=BUILD_TAG::$env:BUILD_TAG"

    - name: Save Assets
      uses: actions/upload-artifact@v2
      with:
        name: MSFS2020-PilotPathRecorder-n2
        path: FS2020PlanePath/bin/
        retention-days: 30

    - name: Create GitHub Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.build-manifest.outputs.BUILD_TAG }}.${{ github.run_id }}
        release_name: Release ${{ steps.build-manifest.outputs.BUILD_TAG }}.${{ github.run_id }}
#    - name: Add Release Manifest
#      run: |
#        echo "Release ${BUILD_TAG}-${BUILD_BRANCH}-${RELEASE_TIME}" > Release/build_release_manifest
    - name: Build Release Deliverable
      uses: thedoctor0/zip-release@master
      with:
        path: FS2020PlanePath/bin/Release
        filename: PilotPathRecorder-n2.zip
    - name: Upload Release Deliverable
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: PilotPathRecorder-n2.zip
        asset_name: PilotPathRecorder-n2-${{ steps.build-manifest.outputs.BUILD_TAG }}.${{ github.run_id }}.zip
        asset_content_type: application/zip

#  release:
#    name: Create Release
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - uses: actions/checkout@v2
#      - name: Get Current Tag
##          echo "BUILD_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV
#        run: |
#          echo "BUILD_TAG=tn2" >> $GITHUB_ENV
#          echo "BUILD_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
#          echo "RELEASE_TIME=$(date +%y%m%d%H%M)" >> $GITHUB_ENV
#          echo "BUILD_TAG=${{ env.BUILD_TAG }}, BUILD_BRANCH=${{ env.BUILD_BRANCH }}, RELEASE_TIME=${{ env.RELEASE_TIME }}"
#      - name: Download Build Artifacts
#        uses: actions/download-artifact@v2
#        with:
#          name: MSFS2020-PilotPathRecorder-n2
#      - name: Create GitHub Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.BUILD_BRANCH }}-${{ env.RELEASE_TIME }}
#          release_name: Release ${{ env.BUILD_TAG }}-${{ env.BUILD_BRANCH }}-${{ env.RELEASE_TIME }}
#      - name: Add Release Manifest
#        run: |
#          echo "Release ${BUILD_TAG}-${BUILD_BRANCH}-${RELEASE_TIME}" > Release/build_release_manifest
#      - name: Build Release Deliverable
#        uses: thedoctor0/zip-release@master
#        with:
#          path: Release
#          filename: PilotPathRecorder-n2.zip
#      - name: Upload Release Deliverable
#        id: upload_release_asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: PilotPathRecorder-n2.zip
#          asset_name: PilotPathRecorder-n2-${{ env.BUILD_TAG }}-${{ env.BUILD_BRANCH }}-${{ env.RELEASE_TIME }}.zip
#          asset_content_type: application/zip

#  release:
#    name: Create Release
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Download Build Artifacts
#        uses: actions/download-artifact@v2
#        with:
#          name: MSFS2020-PilotPathRecorder-n2
#      - name: List Artifacts
#        run: ls -ltr
#      - name: Create GitHub Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}-${{ github.run_number }}
#          release_name: Release ${{ github.ref }}-${{ github.run_number }}
#      - name: Build Release Deliverable
#        uses: thedoctor0/zip-release@master
#        with:
#          filename: PilotPathRecorder-n2.zip
#      - name: Upload Release Deliverable
#        id: upload_release_asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: PilotPathRecorder-n2.zip
##          asset_name: PilotPathRecorder-n2-${{ github.ref }}-${{ github.run_number }}.zip
#          asset_name: PilotPathRecorder-n2-${{ github.run_number }}.zip
#          asset_content_type: application/zip
